//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SteamVRHelperV2.Language {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class EN {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal EN() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SteamVRHelperV2.Language.EN", typeof(EN).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exit.
        /// </summary>
        internal static string Exit_Button {
            get {
                return ResourceManager.GetString("Exit.Button", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exit VR.
        /// </summary>
        internal static string Exit_ExitVR {
            get {
                return ResourceManager.GetString("Exit.ExitVR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exit VR.
        /// </summary>
        internal static string Exit_Title {
            get {
                return ResourceManager.GetString("Exit.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace Oculus Dash with SteamVR..
        /// </summary>
        internal static string NoOculus_Description {
            get {
                return ResourceManager.GetString("NoOculus.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fix SteamVR not exiting.
        /// </summary>
        internal static string NoOculus_FixExit {
            get {
                return ResourceManager.GetString("NoOculus.FixExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This section is only availibe for Oculus users. It enables the option to skip the Oculus Dash when starting the link between PC and an Oculus headset..
        /// </summary>
        internal static string NoOculus_NotDetected {
            get {
                return ResourceManager.GetString("NoOculus.NotDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Oculus not detected.
        /// </summary>
        internal static string NoOculus_NotDetectedTitle {
            get {
                return ResourceManager.GetString("NoOculus.NotDetectedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Oculus Dash.
        /// </summary>
        internal static string NoOculus_Oculus {
            get {
                return ResourceManager.GetString("NoOculus.Oculus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VR Service.
        /// </summary>
        internal static string NoOculus_Service {
            get {
                return ResourceManager.GetString("NoOculus.Service", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SteamVR.
        /// </summary>
        internal static string NoOculus_Steam {
            get {
                return ResourceManager.GetString("NoOculus.Steam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Oculus.
        /// </summary>
        internal static string NoOculus_Title {
            get {
                return ResourceManager.GetString("NoOculus.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply.
        /// </summary>
        internal static string Settings_Apply {
            get {
                return ResourceManager.GetString("Settings.Apply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Author:.
        /// </summary>
        internal static string Settings_Author {
            get {
                return ResourceManager.GetString("Settings.Author", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Luximus.
        /// </summary>
        internal static string Settings_AuthorName {
            get {
                return ResourceManager.GetString("Settings.AuthorName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable experimental warning.
        /// </summary>
        internal static string Settings_DisableExperimentalWarning {
            get {
                return ResourceManager.GetString("Settings.DisableExperimentalWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following feature(s) are experimental..
        /// </summary>
        internal static string Settings_ExperimentalWarning {
            get {
                return ResourceManager.GetString("Settings.ExperimentalWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore.
        /// </summary>
        internal static string Settings_Restore {
            get {
                return ResourceManager.GetString("Settings.Restore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore all files.
        /// </summary>
        internal static string Settings_RestoreFiles {
            get {
                return ResourceManager.GetString("Settings.RestoreFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        internal static string Settings_Title {
            get {
                return ResourceManager.GetString("Settings.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version:.
        /// </summary>
        internal static string Settings_Version {
            get {
                return ResourceManager.GetString("Settings.Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2.0.
        /// </summary>
        internal static string Settings_VersionNumber {
            get {
                return ResourceManager.GetString("Settings.VersionNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upscaling Algorithm.
        /// </summary>
        internal static string Upscaling_Algorithm {
            get {
                return ResourceManager.GetString("Upscaling.Algorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scale VR games with FSR or NIS..
        /// </summary>
        internal static string Upscaling_Description {
            get {
                return ResourceManager.GetString("Upscaling.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Upscaling.
        /// </summary>
        internal static string Upscaling_Enable {
            get {
                return ResourceManager.GetString("Upscaling.Enable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FSR (AMD).
        /// </summary>
        internal static string Upscaling_FSR {
            get {
                return ResourceManager.GetString("Upscaling.FSR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NIS (NVidea).
        /// </summary>
        internal static string Upscaling_NIS {
            get {
                return ResourceManager.GetString("Upscaling.NIS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Render Scale.
        /// </summary>
        internal static string Upscaling_Scale {
            get {
                return ResourceManager.GetString("Upscaling.Scale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Games being scaled up.
        /// </summary>
        internal static string Upscaling_ScaledGames {
            get {
                return ResourceManager.GetString("Upscaling.ScaledGames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sharpness.
        /// </summary>
        internal static string Upscaling_Sharpness {
            get {
                return ResourceManager.GetString("Upscaling.Sharpness", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upscaling.
        /// </summary>
        internal static string Upscaling_Title {
            get {
                return ResourceManager.GetString("Upscaling.Title", resourceCulture);
            }
        }
    }
}
